main.py = launch application.
/base/ = codebase, the library itself. 
/sql/ = sql databases
/plugins/ or /modules/ = planned folder for extensions to the regular codebase


base/access.py = access class, abstractises connections between modules, most requests go through this

base/network.py = network class, controls i/o with clients and the network server.
	* abstract input/output. It strips control chars and such, and passes lines directly to the client and the game.
base/game.py = game class, controls all the other classes. A 'manager' class.
	* game logic will probably not be here, but will be an inherited class of this. 
base/client.py = client class, controls i/o between client and game. Preprocessing, basically.
base/player.py = information about player. Name, location, etc. Player =\= user.
base/sql.py = SQL access middle-man.
base/map.py = holder for rooms, also spawner for them from db
base/room.py = room class, contains players
base/parser.py = parser class, handles verbs and such

sql/map = map database
	* rooms - table containing room info
	* exits - table containing links between rooms
sql/users = user database
	* users - table containing login info
	* players - table containing player names and locations

----

Next TODO-s:
	* ! parser development
	* + verb development
	* # items
	* - region class, which contains a set of rooms in a particular 'region'
	* - world class, which contains regions in a particular 'world'
	* - Wizard/normal user differentiation
	* - creating and modifying rooms on the fly

! - immediate
+ - follows
- - planned
# - put off
